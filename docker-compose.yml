services:
  postgres:
    build:
      context: ./postgres
      dockerfile: Dockerfile
    container_name: postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      TZ: ${PG_TZ}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - ${POSTGRES_VOLUME}:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  pgadmin:
    build:
      context: ./pgadmin
      dockerfile: Dockerfile
    container_name: pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - "${PGADMIN_PORT}:80"
    volumes:
      - ${PGADMIN_VOLUME}:/var/lib/pgadmin
    restart: unless-stopped
  portainer:
    container_name: portainer
    restart: unless-stopped
    build:
      context: ./portainer
      dockerfile: Dockerfile
    ports:
      - "9443:9443"
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    command: --host-management unix:///var/run/docker.sock
volumes:
  pgdata: {}
  pgadmin_data: {}
  portainer_data:
